PARSER_BEGIN(BibTeX)

package compilador;
import java.io.File;
import java.io.IOException;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.Scanner;
import elementos.*;

public class BibTeX {
  public static void main(String args []) throws ParseException, IOException {
    String fname = "";
    Scanner sc = new Scanner(System.in);
    while (fileExist(fname) != true) {
	    System.out.print("Introduza o ficheiro que pretende usar > ");
	    fname = sc.nextLine();
	}

	BibTeX parser = new BibTeX(new FileInputStream(new File(fname)));
	parser.start();
	sc.close();
  }

  private static boolean fileExist(String filename) {
	File file = new File(filename);
	return file.exists();
  }
}

PARSER_END(BibTeX)

SKIP :
{
	" " | "\r" | "\t" | "\n"
}

TOKEN : // 1st level (entries)
{
	< ARTICLE : "@article" > |
	< BOOK : "@book" > |
	< BOOKLET : "@booklet" > |
	< CONFERENCE : "@conference" > |
	< INBOOK : "@inbook" > |
	< INCOLLECTION : "@incollection" > |
	< INPROCEEDINGS : "@inproceedings" > |
	< MANUAL : "@manual" > |
	< MASTERSTHESIS : "@mastersthesis" > |
	< MISC : "@misc" > |
	< PHDTHESIS : "@phdthesis" > |
	< PROCEEDINGS : "@proceedings" > |
	< TECHREPORT : "@techreport" > |
	< UNPUBLISHED : "@unpublished" >
}

TOKEN : // 2nd level [fields]
{
	< AUTHOR : "author" > |
	< TITLE : "title" > |
	< JOURNAL : "journal" > |
	< YEAR : "year" > |
	< VOLUME : "volume" > |
	< NUMBER : "number" > |
	< PAGES : "pages" > |
	< MONTH : "month" > |
	< NOTE : "note" > |
	< KEY : "key" > |
	< EDITOR : "editor" > |
	< PUBLISHER : "publisher" > |
	< SERIES : "series" > |
	< ADDRESS : "address" > |
	< EDITION : "edition" > |
	< HOWPUBLISHED : "howpublished" > |
	< CHAPTER : "chapter" > |
	< TYPE : "type" > |
	< BOOKTITLE : "booktitle" > |
	< ORGANIZATION : "organization" > |
	< SCHOOL : "school" > |
	< INSTITUTION : "institution" >
}

TOKEN :
{
	< #CHARACTER : ["A"-"Z", "a"-"z"] > |
	< #INTEGER : ["0"-"9"] > |
	< WORD : (< CHARACTER > | < INTEGER >)+ >
}

void start(): {Token t1;}
{
	t1 = < ARTICLE > {
		article();
	} |
	t1 = < BOOK > {
		//book();
	} |
	t1 = < BOOKLET > {
		//booklet();
	} |
	t1 = < CONFERENCE > {
		//conference();
	} |
	t1 = < INBOOK > {
		//inbook();
	} |
	t1 = < INCOLLECTION > {
		//incollection();
	} |
	t1 = < MANUAL > {
		//manual();
	} |
	t1 = < MASTERSTHESIS > {
		//mastersthesis();
	} |
	t1 = < MISC > {
		//misc();
	} |
	t1 = < PHDTHESIS > {
		//phdthesis();
	} |
	t1 = < PROCEEDINGS > {
		//proceedings();
	} |
	t1 = < TECHREPORT > {
		//techreport();
	} |
	t1 = < UNPUBLISHED > {
		//unpublished();
	}
}

Token definition() : {Token field;}
{
  "=" "\"" field = <WORD> "\""
  {
    System.out.println(field.image);
    return field;
  }
}

void article() : {Token reference = null, author = null, title = null, journal = null, year = null, volume = null, number = null, pages = null, month = null, note = null, key = null;}
{
	"{" reference = < WORD > ","
    < AUTHOR > author = definition() ","
    < TITLE > title = definition() ","
    < JOURNAL > journal = definition() ","
    < YEAR > year = definition() ","
    < VOLUME > volume = definition() ","
    (< NUMBER > number = definition() ",")?
    (< PAGES > pages = definition() ",")?
    (< MONTH > month = definition() ",")?
    (< NOTE > note = definition() ",")?
    (< KEY > key = definition() ",")?
    "}"
	{
    	Article artigo = new Article(reference.image, author.image, title.image, journal.image, year.image, volume.image, number.image, pages.image, month.image, note.image, key.image);
  	}
}

void book() : {}
{
	"{" <WORD> ","
    ( (< AUTHOR > definition()) | (< EDITOR > definition()) ) ","
    < TITLE > definition() ","
    < PUBLISHER > definition() ","
    < YEAR > definition() ","
    ( (<VOLUME> definition() | < NUMBER > definition()) ",")?
    (< SERIES > definition() ",")?
    (< ADDRESS > definition() ",")?
    (< EDITION > definition() ",")?
    (< MONTH > definition() ",")?
    (< NOTE > definition() ",")?
    (< KEY > definition() ",")?
    "}"
}

void booklet() :{}
{
  	"{" <WORD> ","
    < TITLE > definition() ","
    (< AUTHOR > definition() ",")?
    (< HOWPUBLISHED > definition() ",")?
    (< ADDRESS > definition() ",")?
    (< MONTH > definition() ",")?
    (< YEAR > definition() ",")?
    (< NOTE > definition() ",")?
    (< KEY > definition() ",")?
    "}"
}

void conference() : {}
{
	"{" <CONFERENCE> ","
	< AUTHOR > definition() ","
	< TITLE > definition() ","
	< BOOKTITLE > definition() ","
	< YEAR > definition() ","
    (< EDITOR > definition() ",")?
    ( (<VOLUME> definition() | < NUMBER > definition()) ",")?
    (< SERIES > definition() ",")?
    (< PAGES > definition() ",")?
    (< ADDRESS > definition() ",")?
    (< MONTH > definition() ",")?
    (< ORGANIZATION > definition() ",")?
    (< PUBLISHER > definition() ",")?
    (< NOTE > definition() ",")?
    (< KEY > definition() ",")?
    "}"
}

void inbook() : {}
{
	"{" <WORD> ","
    ( (<AUTHOR> definition()) | (< EDITOR > definition()) ) ","
    < TITLE > definition() ","
    ( (<CHAPTER> definition()) | (< PAGES > definition()) ) ","
    < PUBLISHER > definition() ","
    < YEAR > definition() ","
    ( (<VOLUME> definition() | < NUMBER > definition()) ",")?
    (< SERIES > definition() ",")?
    (< TYPE > definition() ",")?
    (< ADDRESS > definition() ",")?
    (< EDITION > definition() ",")?
    (< MONTH > definition() ",")?
    (< NOTE > definition() ",")?
    (< KEY > definition() ",")?
    "}"
}

void incollection() : {}
{
	"{" <WORD> ","
    <AUTHOR> definition()  ","
    < TITLE > definition() ","
    < BOOKTITLE > definition() ","
    < PUBLISHER > definition() ","
    < YEAR > definition() ","
    (< EDITOR > definition() ",")?
    ( (<VOLUME> definition() | < NUMBER > definition()) ",")?
    (< SERIES > definition() ",")?
    (< TYPE > definition() ",")?
    (< CHAPTER > definition() ",")?
    (< PAGES > definition() ",")?
    (< ADDRESS > definition() ",")?
    (< EDITION > definition() ",")?
    (< MONTH > definition() ",")?
    (< NOTE > definition() ",")?
    (< KEY > definition() ",")?
    "}"
}

void inproceedings() : {}
{
	"{" <INPROCEEDINGS> ","
	< AUTHOR > definition() ","
	< TITLE > definition() ","
	< BOOKTITLE > definition() ","
	< YEAR > definition() ","
    (< EDITOR > definition() ",")?
    ( (<VOLUME> definition() | < NUMBER > definition()) ",")?
    (< SERIES > definition() ",")?
    (< PAGES > definition() ",")?
    (< ADDRESS > definition() ",")?
    (< MONTH > definition() ",")?
    (< ORGANIZATION > definition() ",")?
    (< PUBLISHER > definition() ",")?
    (< NOTE > definition() ",")?
    (< KEY > definition() ",")?
    "}"
}

void manual() : {}
{
	"{" <MANUAL> ","
	< TITLE > definition() ","
    (< AUTHOR > definition() ",")?
    (< ORGANIZATION > definition() ",")?
    (< ADDRESS > definition() ",")?
    (< EDITION > definition() ",")?
    (< MONTH > definition() ",")?
    (< YEAR > definition() ",")?
    (< NOTE > definition() ",")?
    (< KEY > definition() ",")?
    "}"
}

void mastersthesis() : {}
{
	"{" <MASTERSTHESIS> ","
    < AUTHOR > definition() ","
	< TITLE > definition() ","
    < SCHOOL > definition() ","
    < YEAR > definition() ","
    (< TYPE > definition() ",")?
    (< ADDRESS > definition() ",")?
    (< MONTH > definition() ",")?
    (< NOTE > definition() ",")?
    (< KEY > definition() ",")?
    "}"
}

void misc() : {}
{
	"{" <misc> ","
    (< AUTHOR > definition() ",")?
    (< TITLE > definition() ",")?
    (< HOWPUBLISHED > definition() ",")?
    (< MONTH > definition() ",")?
    (< YEAR > definition() ",")?
    (< NOTE > definition() ",")?
    (< KEY > definition() ",")?
    "}"
}

void phdthesis() : {}
{
	"{" <WORD> ","
	< AUTHOR > definition() ","
	< TITLE > definition() ","
	< SCHOOL > definition() ","
	< YEAR > definition() ","
	( < TYPE > definition() "," )?
	( < ADDRESS > definition() "," )?
	( < MONTH > definition() "," )?
	( < NOTE > definition() "," )?
	"}"
}

void proceedings() : {}
{
	"{" < WORD > ","
	< TITLE > definition() ","
	< YEAR > definition() ","
	(< EDITOR > definition() ",")?
	(< VOLUME > definition() ",")?
	(< NUMBER > definition() ",")?
	(< SERIES > definition() ",")?
	(< ADDRESS > definition() ",")?
	(< MONTH > definition() ",")?
	(< ORGANIZATION > definition() ",")?
	(< PUBLISHER > definition() ",")?
	(< NOTE > definition() ",")?
	"}"
}

void techreport() : {}
{
	"{" < WORD > ","
	< AUTHOR > definition() ","
	< TITLE > definition() ","
	< INSTITUTION > definition() ","
	< YEAR > definition() ","
	(< TYPE > definition() ",")?
	(< NUMBER > definition() ",")?
	(< ADDRESS > definition() ",")?
	(< MONTH > definition() ",")?
	(< NOTE > definition() ",")?
	"}"
}

void unpublished() : {}
{
	"{" < WORD > ","
	< AUTHOR > definition() ","
	< TITLE > definition() ","
	< NOTE > definition() "," 
	(< MONTH > definition() ",")?
	(< YEAR > definition() ",")?
	"}"
}
